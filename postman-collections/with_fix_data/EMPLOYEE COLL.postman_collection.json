{
	"info": {
		"_postman_id": "26fb92aa-0b34-4b94-bbaf-e8b78563bd45",
		"name": "EMPLOYEE COLL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "NEG jobdescription",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Empty body - Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8888/jobdescriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"jobdescriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "jobdescription",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"job_description_id\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"title check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"developer\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"addedAt check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.addedAt).to.eql(\"2021-07-28T11:00:39.182\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.unset(\"job_description_id\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"developer\",\r\n    \"description\": \"development\",\r\n    \"addedAt\": \"2021-07-28T11:00:39.182\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8888/jobdescriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"jobdescriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "NEG employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"employee_id\", jsonData.id);\r",
							"\r",
							"\r",
							"pm.test(\"Empty body - Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.unset(\"employee_id\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8888/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"employee_id\", jsonData.id);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Username check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userName).to.eql(\"Gabesz\");\r",
							"});\r",
							"\r",
							"pm.test(\"Firstname check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql(\"Áron\");\r",
							"});\r",
							"\r",
							"pm.test(\"Lastname check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.lastName).to.eql(\"Gábor\");\r",
							"});\r",
							"\r",
							"pm.test(\"Middlename check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.middleName).to.eql(\"Lajos\");\r",
							"});\r",
							"\r",
							"pm.test(\"Email check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.emailId).to.eql(\"gabesz@gmail.com\");\r",
							"});\r",
							"\r",
							"pm.test(\"Day of birth check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.dayOfBirth).to.eql(\"1999-07-28\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.unset(\"employee_id\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\": \"Gabesz\",\r\n    \"jobDescriptionId\": {{job_description_id}},\r\n    \"firstName\": \"Áron\",\r\n    \"lastName\": \"Gábor\",\r\n    \"middleName\": \"Lajos\",\r\n    \"emailId\": \"gabesz@gmail.com\",\r\n    \"dayOfBirth\": \"1999-07-28\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8888/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"var template = `\r",
							"    <table bgcolor=\"#FFFFFF\">\r",
							"        <tr>\r",
							"            <th>id</th>\r",
							"            <th>userName</th>\r",
							"            <th>jobDescription</th>\r",
							"        </tr>\r",
							"\r",
							"        {{#each response}}\r",
							"            <tr>\r",
							"                <td>{{id}}</td>\r",
							"                <td>{{userName}}</td>\r",
							"                <td>{{jobDescription.title}}</td>\r",
							"            </tr>\r",
							"        {{/each}}\r",
							"    </table>\r",
							"`;\r",
							"\r",
							"// Set visualizer\r",
							"pm.visualizer.set(template, {\r",
							"    // Pass the response body parsed as JSON as `data`\r",
							"    response: pm.response.json()\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "employee/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/employees/{{employee_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees",
						"{{employee_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "employee/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userName).to.eql(\"Gabesz\");\r",
							"});\r",
							"\r",
							"pm.test(\"Middlename change check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.middleName).to.eql(\"Rashid\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": {{employee_id}},\r\n    \"jobDescriptionId\": {{job_description_id}},\r\n    \"userName\": \"Gabesz\",\r\n    \"firstName\": \"Áron\",\r\n    \"middleName\": \"Rashid\",\r\n    \"lastName\": \"Gábor\",\r\n    \"emailId\": \"gabesz@gmail.com\",\r\n    \"dayOfBirth\": \"1999-07-28\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8888/employees/{{employee_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees",
						"{{employee_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "employee/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/employees/{{employee_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees",
						"{{employee_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "employee/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/employees/{{employee_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees",
						"{{employee_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "employee/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500, employee has been deleted\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/employees/{{employee_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees",
						"{{employee_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"employees"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "password",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}